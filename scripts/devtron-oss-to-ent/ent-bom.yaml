global:
  podSecurityContext:
    fsGroup: 1000
    runAsGroup: 1000
    runAsUser: 1000
  containerSecurityContext:
    allowPrivilegeEscalation: false
    runAsUser: 1000
    runAsNonRoot: true
  containerRegistry: "quay.io/devtron"
  # The below values can be specified both at global as well as component level
  nodeSelector: {}
  tolerations: []
  imagePullSecrets: []
# Add any extraManifest to be deployed.
extraManifests:
  # Scoop
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: scoop-devtron
      namespace: devtroncd
      labels:
        app: scoop
    spec:
      minReadySeconds: 60
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 3
      selector:
        matchLabels:
          app: scoop
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 1
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: scoop
        spec:
          containers:
            - env:
                - name: X-PASS-KEY
                  value: random-string
                - name: PASS_KEY
                  value: random-string
                - name: RETENTION
                  value: "10080"
                - name: TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: devtron-secret
                      key: ORCH_TOKEN
              envFrom:
                - configMapRef:
                    name: scoop-cm
              image: devtroninc.azurecr.io/scoop:296d351d-629-24001
              imagePullPolicy: IfNotPresent
              name: scoop
              ports:
                - containerPort: 8080
                  name: app
                  protocol: TCP
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          imagePullSecrets:
            - name: devtron-image-pull-enterprise
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: sa-scoop
          serviceAccountName: sa-scoop
          terminationGracePeriodSeconds: 30
  # Scoop-service
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: scoop
      name: scoop-service
      namespace: devtroncd
    spec:
      ports:
        - name: app
          port: 80
          protocol: TCP
          targetPort: app
      selector:
        app: scoop
      sessionAffinity: None
      type: ClusterIP
  # Scoop ConfigMap
  - apiVersion: v1
    data:
      CLUSTER_ID: "1"
      ORCHESTRATOR_URL: http://devtron-service.devtroncd.svc.cluster.local/orchestrator
    kind: ConfigMap
    metadata:
      name: scoop-cm
      namespace: devtroncd
  # Scoop ClusterRole
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      annotations:
        rbac.authorization.kubernetes.io/autoupdate: "true"
      name: read-only-cluster-role-scoop
    rules:
      - apiGroups:
          - "*"
        resources:
          - "*"
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - extensions
        resources:
          - "*"
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - apps
        resources:
          - "*"
        verbs:
          - get
          - list
          - watch
  # Scoop ClusterRoleBinding
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: read-only-user-crb-scoop
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: read-only-cluster-role-scoop
    subjects:
      - kind: ServiceAccount
        name: sa-scoop
        namespace: devtroncd
  # Scoop ServiceAccount
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: sa-scoop
      namespace: devtroncd
  # Casbin
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app: casbin
        release: casbin
      name: casbin
      namespace: devtroncd
    spec:
      minReadySeconds: 60
      replicas: 1
      revisionHistoryLimit: 3
      selector:
        matchLabels:
          app: casbin
          release: casbin
      template:
        metadata:
          labels:
            app: casbin
            release: casbin
        spec:
          containers:
            - env:
                - name: DEVTRON_APP_NAME
                  value: casbin
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: PG_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: postgresql-postgresql
                      key: postgresql-password
              envFrom:
                - configMapRef:
                    name: casbin-cm
              image: devtroninc.azurecr.io/casbin:8a0c2298-11b51149-462-24419
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 20
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              name: casbin
              ports:
                - containerPort: 8080
                  name: http
                  protocol: TCP
                - containerPort: 9000
                  name: app
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /health
                  port: 8080
                initialDelaySeconds: 20
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 5
              resources:
                limits:
                  cpu: 0.5m
                  memory: 500Mi
                requests:
                  cpu: 0.5m
                  memory: 301Mi
              volumeMounts: []
          imagePullSecrets:
            - name: devtron-image-pull-enterprise
          restartPolicy: Always
          serviceAccountName: default
          terminationGracePeriodSeconds: 30
          volumes: []
  # Casbin ConfigMap
  - apiVersion: v1
    data:
      PG_ADDR: postgresql-postgresql.devtroncd
      PG_DATABASE: casbin
      PG_PORT: "5432"
      PG_USER: postgres
    kind: ConfigMap
    metadata:
      name: casbin-cm
      namespace: devtroncd
  # Casbin Service 
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: casbin
        release: casbin
      name: casbin-service
      namespace: devtroncd
    spec:
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - name: http
          port: 80
          protocol: TCP
          targetPort: http
        - name: app
          port: 9000
          protocol: TCP
          targetPort: app
      selector:
        app: casbin
        release: casbin
      sessionAffinity: None
      type: ClusterIP
    status:
      loadBalancer: {}
  # ServiceAccount for chart-sync
  - apiVersion: v1
    imagePullSecrets:
      - name: devtron-image-pull-enterprise
    kind: ServiceAccount
    metadata:
      name: chart-sync
      namespace: devtroncd
#
installer:
  release: "v0.7.1"
  registry: ""
  image: "inception"
  tag: "473deaa4-185-21582"
components:
  # Values for dashboard
  dashboard:
    config:
      extraConfigs:
        USE_V2: "true"
        ENABLE_BUILD_CONTEXT: "true"
        ENABLE_RESTART_WORKLOAD: "true"
        HIDE_EXCLUDE_INCLUDE_GIT_COMMITS: "false"
        ENABLE_SCOPED_VARIABLES: "true"
        ENABLE_CI_JOB: "true"
        GLOBAL_API_TIMEOUT: "60000"
        TRIGGER_API_TIMEOUT: "60000"
        ENABLE_EXTERNAL_ARGO_CD: "true"
        SERVICE_WORKER_TIMEOUT: "1"
        API_BATCH_SIZE: "30"
        HIDE_GITOPS_OR_HELM_OPTION: "false"
        HIDE_DISCORD: "true"
        ENABLE_RESOURCE_SCAN: "true"
        ENABLE_RESOURCE_SCAN_V2: "true"
        HIDE_RELEASES: "false"
        HIDE_RESOURCE_WATCHER: "false"
        FEATURE_SCOPED_VARIABLE_ENVIRONMENT_LIST_ENABLE: "true"
    registry: "devtroninc.azurecr.io"
    image: "dashboard:8287dc24-97834a34-6-24451"
    imagePullSecrets:
      - name: devtron-image-pull-enterprise
    imagePullPolicy: IfNotPresent
  # Values for devtron
  devtron:
    registry: "devtroninc.azurecr.io"
    imagePullSecrets:
      - name: devtron-image-pull-enterprise
    image: "hyperion:3aa7e420-280-23147"
    cicdImage: "devtron:727b1521-4-24532"
    imagePullPolicy: IfNotPresent
    customOverrides:
      USE_CUSTOM_HTTP_TRANSPORT: "true"
      ASYNC_BUILDX_CACHE_EXPORT: "false"
      BUILDX_CACHE_MODE_MIN: "false"
      CASBIN_CLIENT_URL: casbin-service.devtroncd:9000
      DEVTRON_INSTALLATION_TYPE: enterprise
      CLONING_MODE: FULL
      SCOPED_VARIABLE_ENABLED: "true"
      SCOPED_VARIABLE_HANDLE_PRIMITIVES: "true"
      SCOOP_CLUSTER_CONFIG: '{"1":{"serviceName":"scoop-service","passKey":"random-string","namespace":"devtroncd","port":"80"}}'
      DEVTRON_CHART_ARGO_CD_INSTALL_REQUEST_TIMEOUT: "1"
      IS_INTERNAL_USE: "true"
      STACK_VERSION: "hotfix-v0.15.0"
      # CI_NODE_LABEL_SELECTOR: purpose=ci
      # CI_NODE_TAINTS_KEY: dedicated
      # CI_NODE_TAINTS_VALUE: ci
      # CD_NODE_LABEL_SELECTOR: kubernetes.io/os=linux
      # CD_NODE_TAINTS_KEY: dedicated
      # CD_NODE_TAINTS_VALUE: ci
  # Values for ciRunner
  ciRunner:
    registry: ""
    image: "ci-runner:3f6badaa-515-24518"
  # Values for argocdDexServer
  argocdDexServer:
    registry: ""
    image: "dex:v2.30.2"
    imagePullPolicy: IfNotPresent
    initContainer:
      authenticator: "authenticator:e414faff-393-13273"
  # Values for kubelink
  kubelink:
    registry: "devtroninc.azurecr.io"
    imagePullSecrets:
      - name: devtron-image-pull-enterprise
    image: "kubelink:e5353d30-310-24320"
    imagePullPolicy: IfNotPresent
    configs:
      ENABLE_HELM_RELEASE_CACHE: "true"
      USE_CUSTOM_HTTP_TRANSPORT: "true"
      MANIFEST_FETCH_BATCH_SIZE: "2"
      NATS_MSG_PROCESSING_BATCH_SIZE: "1"
      NATS_SERVER_HOST: nats://devtron-nats.devtroncd:4222
      PG_ADDR: postgresql-postgresql.devtroncd
      PG_DATABASE: orchestrator
      PG_LOG_QUERY: "true"
      PG_PORT: "5432"
      PG_USER: postgres
    dbconfig:
      secretName: postgresql-postgresql
      keyName: postgresql-password
  # Values for kubewatch
  kubewatch:
    registry: ""
    image: "kubewatch:e09e780b-370-24238"
    imagePullPolicy: IfNotPresent
    configs:
      devtroncd_NAMESPACE: "devtron-ci"
      CI_INFORMER: "true"
      ACD_NAMESPACE: "devtroncd"
      ACD_INFORMER: "true"
      NATS_STREAM_MAX_AGE: "10800"
      USE_CUSTOM_HTTP_TRANSPORT: "true"
  # Values for postgres
  postgres:
    registry: ""
    image: "postgres:11.9.0-debian-10-r26"
    armImage: "postgres:11.9"
    initImage: "minideb:latest"
    imagePullPolicy: "IfNotPresent"
    metrics:
      image: postgres_exporter:v0.4.7
      armImage: postgres_exporter:v0.10.1
  # Values for gitsensor
  gitsensor:
    registry: "devtroninc.azurecr.io"
    imagePullSecrets:
      - name: devtron-image-pull-enterprise
    image: "git-sensor:36b7a68c-535-24240"
    imagePullPolicy: IfNotPresent
    serviceMonitor:
      enabled: false
    persistence:
      volumeSize: 2Gi
    configs:
      PG_ADDR: postgresql-postgresql.devtroncd
      PG_USER: postgres
      COMMIT_STATS_TIMEOUT_IN_SEC: "2"
      ENABLE_FILE_STATS: "true"
      USE_GIT_CLI: "true"
    dbconfig:
      secretName: postgresql-postgresql
      keyName: postgresql-password
  # Values for lens
  lens:
    registry: ""
    image: "lens:d925f072-19-24526"
    imagePullPolicy: IfNotPresent
    configs:
      GIT_SENSOR_PROTOCOL: GRPC
      GIT_SENSOR_URL: git-sensor-service.devtroncd:90
      NATS_SERVER_HOST: nats://devtron-nats.devtroncd:4222
      PG_ADDR: postgresql-postgresql.devtroncd
      PG_PORT: "5432"
      PG_USER: postgres
      PG_DATABASE: lens
    dbconfig:
      secretName: postgresql-postgresql
      keyName: postgresql-password
  # Change below values for nats
  nats:
    registry: ""
    image: nats:2.9.3-alpine
    reloader:
      image: nats-server-config-reloader:0.6.2
      imagePullPolicy: IfNotPresent
    metrics:
      image: prometheus-nats-exporter:0.9.0
      imagePullPolicy: IfNotPresent
    natsBox:
      image: nats-box
    serviceMonitor:
      enabled: false
    persistence:
      storage: 5Gi
  migrator:
    registry: ""
    imagePullSecrets:
      - name: devtron-image-pull-enterprise
    image: "migrator:v4.16.2"
    kubectlImage: "kubectl:latest"
    duplicateChartImage: devtron-utils:dup-chart-repo-v1.1.0
    envVars:
      devtron:
        DB_NAME: "orchestrator"
      casbin:
        DB_NAME: "casbin"
      gitsensor:
        DB_NAME: "git_sensor"
      lens:
        DB_NAME: "lens"
  chartSync:
    registry: ""
    image: chart-sync:a3c9fcd9-341-24267
# values for argocd integration
argo-cd:
  global:
    image:
      # -- If defined, a repository applied to all Argo CD deployments
      repository: quay.io/argoproj/argocd
      # -- Overrides the global Argo CD image tag whose default is the chart appVersion
      tag: "v2.5.2"
      # -- If defined, a imagePullPolicy applied to all Argo CD deployments
      imagePullPolicy: IfNotPresent
# Change below values for workflow controller
workflowController:
  registry: "quay.io/argoproj"
  image: "workflow-controller:v3.4.3"
  executorImage: "argoexec:v3.4.3"
  IMDSv1Image: "workflow-controller:v3.0.7"
  IMDSv1ExecutorImage: "argoexec:v3.0.7"
# values for security integration
security:
  imageScanner:
    registry: "devtroninc.azurecr.io"
    image: "image-scanner:ce7277d3-112-24517"
    imagePullSecrets:
      - name: devtron-image-pull-enterprise
  clair:
    image:
      repository: clair
      tag: 4.3.6
# Values for notifier integration
notifier:
  image: "notifier:82856462-74-24257"
minio:
  image: "minio:RELEASE.2021-02-14T04-01-33Z"
  mbImage: "minio-mc:RELEASE.2021-02-14T04-28-06Z"
  gatewayImage: "minio:RELEASE.2020-12-03T05-49-24Z"
# Values for grafana integration
monitoring:
  grafana:
    registry: ""
    image: "grafana:7.3.1"
    busyboxImage: "busybox:1.31.1"
    batsImage: "bats:v1.4.1"
    imagePullPolicy: IfNotPresent
    grafanaOrgJob:
      curlImage: k8s-utils:tutum-curl
    grafanaDashboards:
      image: "k8s-sidecar:1.1.0"
      curlImage: "curl:7.73.0"
      imagePullPolicy: IfNotPresent
